
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
     &kp ESCAPE    &kp N1              &kp N2              &kp N3              &kp N4  &kp N5                         &mo 4                                                                                &mo 1  &kp N6              &kp N7              &kp N8              &kp N9    &kp N0         &kp MINUS
        &kp TAB     &kp Q               &kp W               &kp E               &kp R   &kp T            &kp LC(LA(LS(N7)))                                                                   &kp LC(LA(LS(N9)))   &kp Y               &kp U               &kp I               &kp O     &kp P  &kp LEFT_BRACKET
   &kp CAPSLOCK     &kp A               &kp S               &kp D               &kp F   &kp G            &kp LC(LA(LS(N8)))    &mo 3   &kp LA(TAB)                    &kp LC(TAB)      &mo 2  &kp LC(LA(LS(N0)))   &kp H               &kp J               &kp K               &kp L  &kp SEMI           &kp SQT
 &sk LEFT_SHIFT     &kp Z               &kp X               &kp C               &kp V   &kp B                         &none    &none   &kp RA(TAB)   &none   &none  &kp BACKSLASH      &none               &none   &kp N               &kp M           &kp COMMA             &kp DOT  &kp FSLH   &sk RIGHT_SHIFT
      &sk LCTRL  &sk LALT  &kp LC(LA(LS(N3)))  &kp LC(LA(LS(N2)))  &kp LC(LA(LS(N1)))                         &kp BACKSPACE  &kp DEL  &sk LEFT_WIN                  &sk RIGHT_WIN  &kp ENTER           &kp SPACE          &kp LC(LA(LS(N4)))  &kp LC(LA(LS(N5)))  &kp LC(LA(LS(N6)))  &sk RALT         &sk RCTRL
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_FUNC {
            bindings = <
 &trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp F5            &trans                                                  &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
 &trans  &kp F6  &kp F7   &kp F8   &kp F9  &kp F10            &trans                                                  &trans  &trans  &trans  &trans  &trans   &trans  &trans
 &trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp F5            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans  &trans
 &trans  &trans  &trans  &kp F11  &kp F12   &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans  &trans
 &trans  &trans  &trans   &trans   &trans                     &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans   &trans  &trans
            >;
        };

        layer_Special {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                             &trans           &trans     &trans          &trans           &trans  &trans  &kp BACKSLASH
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                             &trans           &trans     &trans      &kp INSERT           &trans  &trans         &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                    &kp C_VOLUME_UP  &trans  &trans  &kp LC(LA(DEL))  &kp PSCRN        &kp SLCK  &kp PAUSE_BREAK  &trans         &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_DOWN  &trans  &trans           &trans  &kp GRAVE  &kp KP_NUMLOCK        &kp EQUAL  &trans         &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                         &kp C_MUTE  &trans  &trans                      &trans          &trans           &trans  &trans         &trans
            >;
        };

        layer_Windows {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                &trans                                                      &trans  &trans        &trans        &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                &trans                                                      &trans  &trans        &trans    &kp LG(UP)         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                &trans  &trans  &trans                  &trans  &trans      &trans  &trans  &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(RIGHT)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &kp LA(F4)  &trans  &trans                  &trans  &trans  &kp LC(F4)                &trans        &trans         &trans  &trans  &trans
            >;
        };

    };
};
